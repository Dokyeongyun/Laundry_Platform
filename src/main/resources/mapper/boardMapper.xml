<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coders.laundry.repository.BoardRepository">
    <!-- 카테고리 목록 출력 -->
    <select id="categoryList"
            resultType="CategoryEntity">
        SELECT category_id, category_name
          FROM category
    </select>

    <!-- 게시판별 인기 게시글 조회 -->
    <select id="selectHotPosts"
            resultType="PostEntity">
        SELECT post_id, category_id, writer, title, contents, create_date, like_num
          FROM post
         WHERE post_id IN
           (SELECT post_id
              FROM post
             WHERE create_date BETWEEN DATE_ADD(NOW(), INTERVAL -1 DAY) AND NOW()
             GROUP BY category_id
            HAVING count(*) >= 1
             ORDER BY like_num DESC
             LIMIT 1)
        ORDER BY category_id ASC
    </select>

    <!-- 특정 게시판의 게시글 조회 -->
    <select id="selectSpecificCategoryPosts"
            parameterType="int"
            resultType="PostEntity">
        SELECT post_id, writer, title, contents,create_date, like_num
          FROM post
         WHERE category_id = #{categoryId}
         ORDER BY create_date DESC
         LIMIT 100
    </select>

    <!-- 게시글 등록 -->
    <insert id="writePost"
            parameterType="PostEntity"
            useGeneratedKeys="true"
            keyProperty="postId"
            keyColumn="post_id">
        INSERT INTO post(category_id, writer, title, contents)
        VALUES (#{categoryId}, #{writer}, #{title}, #{contents})
    </insert>

    <select id="selectById"
            parameterType="int"
            resultType="PostEntity">
        SELECT post_id, category_id, writer, title, contents, create_date, like_num, update_date, delete_date
          FROM post
         WHERE post_id = #{postId}
    </select>

    <update id="updatePost"
            parameterType="PostEntity"
            useGeneratedKeys="true"
            keyProperty="postId"
            keyColumn="post_id">
        UPDATE post
           SET title = #{title},
               contents = #{contents},
               update_date = now()
         WHERE post_id = #{postId}
    </update>

    <delete id="deletePost"
            parameterType="int">
        DELETE
          FROM post
         WHERE post_id = #{postId}
    </delete>
</mapper>